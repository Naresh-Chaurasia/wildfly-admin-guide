connect

batch

/subsystem=elytron/properties-realm=demoPropRealm:add(groups-attribute=groups,groups-properties={path=mgmt-groups.properties,relative-to=jboss.server.config.dir},users-properties={path=mgmt-users.properties,relative-to=jboss.server.config.dir,plain-text=true})

/subsystem=elytron/simple-role-decoder=from-roles-attribute:add(attribute=Roles)
 
/subsystem=elytron/security-domain=propSD:add(realms=[{realm=demoPropRealm,role-decoder=groups-to-roles}],default-realm=demoPropRealm,permission-mapper=default-permission-mapper)
 
/subsystem=elytron/http-authentication-factory=example-prop-http-auth:add(http-server-mechanism-factory=global,security-domain=propSD,mechanism-configurations=[{mechanism-name=BASIC,mechanism-realm-configurations=[{realm-name=exampleApplicationDomain}]}])


/core-service=management/access=authorization/:write-attribute(name=provider,value=rbac)

/core-service=management/access=authorization/role-mapping=SuperUser/include=f.marchioni/:add(type=USER,name=f.marchioni)
/core-service=management/access=authorization/role-mapping=Monitor/:add
/core-service=management/access=authorization/role-mapping=Deployer/:add
/core-service=management/access=authorization/role-mapping=Monitor/include=wildmonitor/:add(type=USER,name=wildmonitor)
/core-service=management/access=authorization/role-mapping=Deployer/include=wilddeployer/:add(type=USER,name=wilddeployer)



run-batch

reload

